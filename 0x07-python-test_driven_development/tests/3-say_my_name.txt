# 3-say_my_name.txt

===========================
How to Use 3-say_my_name.py
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

=====
Usage
=====

The ``say_my_name(...)`` module prints the full name in the format below
"My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Brennan", "Baraban")
    My name is Brennan Baraban

::

    >>> say_my_name("Cornelius Maxwell", "Jones II")
    My name is Cornelius Maxwell Jones II

If ```last_name``` is not provided,an empty string is printed instead.

::

    >>> say_my_name("Brennan")
    My name is Brennan 

========================
Handling Invalid Names
=======================

Both ``first_name`` and ``last_name``` parameters must be strings.
Otherwise, a TypeError is raised.

::

    >>> say_my_name(10)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(6, "Henry")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("LeBron", ["Cavs", "Lakers", "Heat"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

The ``say_my_name`` function must take at least 1 argument

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
